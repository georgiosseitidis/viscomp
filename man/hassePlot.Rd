% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hassePlot.R
\name{hassePlot}
\alias{hassePlot}
\title{Hasse plot of multiple outcomes}
\usage{
hassePlot(ls, random = NULL, small.values = NULL)
}
\arguments{
\item{ls}{A list of \code{\link[netmeta]{netmeta}} models.}

\item{random}{A \code{logical} vector that specifies whether the random-effects or the fixed-effect NMA model is used. If \code{random = NULL} the random-effects NMA model is used for each outcome.}

\item{small.values}{A \code{character} vector that specifies whether small intervention effects indicate a beneficial (\code{small.values = "good"}) or a harmful (\code{small.values = "bad"}) effect. If \code{small.values = NULL} small values assumed \code{good} for each outcome.}
}
\value{
A hasse diagram.
}
\description{
The function produces a hasse diagram to represent a finite partially ordered set,
by drawing curves between interventions in network meta-analysis (NMA).
}
\details{
The function is a wrapper function for R function \code{\link[netmeta]{hasse}} in R package \bold{netmeta}.
Function \code{hasse} can only be used if R package \bold{hasseDiagram} is installed.
}
\examples{
# Artificial data set

t1 <- c("A", "B", "C", "A+B", "A+C", "B+C", "A")
t2 <- c("C", "A", "A+C", "B+C", "A", "B", "B+C")

TE1 <- c(2.12, 3.24, 5.65, -0.60, 0.13, 0.66, 3.28)
TE2 <- c(4.69, 2.67, 2.73, -3.41, 1.79, 2.93, 2.51)

seTE1 <- rep(0.1, 7)
seTE2 <- rep(0.2, 7)

study <- paste0("study_", 1:7)

data1 <- data.frame(
  "TE" = TE1, "seTE" = seTE1, "treat1" = t1, "treat2" = t2, "studlab" = study,
  stringsAsFactors = FALSE
)

data2 <- data.frame(
  "TE" = TE2, "seTE" = seTE2, "treat1" = t1, "treat2" = t2, "studlab" = study,
  stringsAsFactors = FALSE
)

# Network meta-analysis models

net1 <- netmeta::netmeta(
  TE = TE, seTE = seTE, studlab = studlab, treat1 = treat1,
  treat2 = treat2, data = data1, ref = "A"
)

net2 <- netmeta::netmeta(
  TE = TE, seTE = seTE, studlab = studlab, treat1 = treat1,
  treat2 = treat2, data = data2, ref = "A"
)

# Hasse plot assuming that the first outcome is beneficial while the second is harmful.

hassePlot(ls = list(net1, net2), small.values = c("bad", "good"))

}
