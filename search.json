[{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":[]},{"path":"https://georgiosseitidis.github.io/viscomp/articles/viscomp.html","id":"artificial-network-meta-analysis-model","dir":"Articles","previous_headings":"Single outcome","what":"Artificial network meta-analysis model","title":"An introduction to network meta-analysis using the viscomp package","text":"Load MACE data viscomp package Network meta-analysis (NMA) model applied using R-package netmeta. MACE dichotomous outcome, NMA model constructed using odds ratios () effect size.","code":"library(viscomp) data(\"MACE\") library(netmeta) #> Loading required package: meta #> Loading 'meta' package (version 5.2-0). #> Type 'help(meta)' for a brief overview. #> Readers of 'Meta-Analysis with R (Use R!)' should install #> older version of 'meta' package: https://tinyurl.com/dt4y5drs #> Loading 'netmeta' package (version 2.1-0). #> Type 'help(\"netmeta-package\")' for a brief overview. #> Readers of 'Meta-Analysis with R (Use R!)' should install #> older version of 'netmeta' package: https://tinyurl.com/kyz6wjbb data_NMA <- pairwise(studlab = Study,                        treat = list(treat1, treat2, treat3, treat4),                       n = list(n1, n2, n3, n4),                        event = list(event1, event2, event3, event4),                        data = MACE,                        sm = \"OR\" )  net <- netmeta(TE = TE,                 seTE = seTE,                 studlab = studlab,                 treat1 = treat1,                treat2 = treat2,                 data = data_NMA,                 ref = \"UC\")"},{"path":"https://georgiosseitidis.github.io/viscomp/articles/viscomp.html","id":"explore-components-geometry-with-compgraph","dir":"Articles","previous_headings":"Single outcome","what":"Explore components geometry with compGraph()","title":"An introduction to network meta-analysis using the viscomp package","text":"compGraph() meant visualize frequency components’ combinations found network. function resembles network plot nodes represent individual components found network edges represent combination components found least one treatment arm trials included network meta-analysis model. edge’s color represents one unique interventions (components’ combination) found network interventions. Edges’ thickness indicates frequency intervention (combination components) observed network (number arms combination assigned). number frequent combinations can modified argument mostF.  can visualize 10 frequent component combinations :  NMA usually interventions used potentially inactive reference intervention (e.g. placebo, usual care), combined interventions. can exclude interventions argument excl. example, can exclude usual care (UC) component network plot :","code":"compGraph(net, mostF = 10, title = \"\") compGraph(net, mostF = 10, title = \"\", excl = \"UC\")"},{"path":"https://georgiosseitidis.github.io/viscomp/articles/viscomp.html","id":"explore-the-efficacy-of-the-two-by-two-components-combinations-with-heatcomp","dir":"Articles","previous_headings":"Single outcome","what":"Explore the efficacy of the two-by-two components combinations with heatcomp()","title":"An introduction to network meta-analysis using the viscomp package","text":"heatcomp() creates heat plot comparing two--two component combinations reference intervention. Diagonal elements refer components, -diagonal components’ combinations. element summarizes efficacy interventions includes corresponding component combination. Combinations observed NMA model, denoted letter “X”. magnitude efficacy reflected color’s intensity. Estimates close zero denoted white color, zero denoted warm colors (red) cold colors (blue) respectively. function default uses z-scores median summary measure.  can visualize efficacy components, :  plot see intensive colors observed component E, combination components B E, E. Thus, combination seems efficacious according heatcomp().","code":"heatcomp(net)"},{"path":[]},{"path":"https://georgiosseitidis.github.io/viscomp/articles/viscomp.html","id":"components","dir":"Articles","previous_headings":"Single outcome > Explore the efficacy of the components with specc()","what":"Components","title":"An introduction to network meta-analysis using the viscomp package","text":"specc() works similarly heatcomp() except instead visualizing two--two component combinations, can visualize combinations two components. function default produces violin plots based components z-values.  can visualize distribution component network :  Note plot median estimates components equal diagonal elements heatcomp() function. addition, receive warning message component G included one intervention.","code":"specc(net) #> Warning: Violin plot requires at least 2 data point"},{"path":"https://georgiosseitidis.github.io/viscomp/articles/viscomp.html","id":"components-combinations","dir":"Articles","previous_headings":"Single outcome > Explore the efficacy of the components with specc()","what":"Components combinations","title":"An introduction to network meta-analysis using the viscomp package","text":"can visualize distribution component combinations (e.g. , +B, +B+C) :","code":"specc(net, combination = c(\"A\", \"A + B\", \"A + B + C\"))"},{"path":"https://georgiosseitidis.github.io/viscomp/articles/viscomp.html","id":"number-of-components","dir":"Articles","previous_headings":"Single outcome > Explore the efficacy of the components with specc()","what":"Number of components","title":"An introduction to network meta-analysis using the viscomp package","text":"Often interested exploring behavior intervention’s effect number components increased. can   can also group violins based number components. example, can create violins interventions includes 1 component, 2 components, 1-2 components 2 components, ","code":"specc(net, components_number = TRUE) specc(net, components_number = TRUE, groups = c(1, 2, \"1-2\", \"2+\"))"},{"path":"https://georgiosseitidis.github.io/viscomp/articles/viscomp.html","id":"explore-the-efficacy-of-the-components-with-denscomp","dir":"Articles","previous_headings":"Single outcome","what":"Explore the efficacy of the components with denscomp()","title":"An introduction to network meta-analysis using the viscomp package","text":"efficacy component (component combination) can explored comparing corresponding densities. denscomp() compares following densities: one density constructed NMA results referring interventions including component (combination) interest, second density refers interventions, including underlying component (combination).  example, interested exploring efficacy component combination +B, can visualize densities NMA intervention estimates interventions include include component respectively,   denscomp() can also compare two densities. interested example compare densities interventions include component , components +B, components +B+C, can ","code":"denscomp(net, combination = \"A+B\", z_value = FALSE) denscomp(net, combination = c(\"A\", \"A + B\", \"A + B + C\"), z_value = FALSE)"},{"path":"https://georgiosseitidis.github.io/viscomp/articles/viscomp.html","id":"leaving-one-component-out-scatter-plot-with-loccos","dir":"Articles","previous_headings":"Single outcome","what":"Leaving one component out scatter plot with loccos()","title":"An introduction to network meta-analysis using the viscomp package","text":"Exploring whether inclusion exclusion component (combination) positive negative impact efficacy intervention undertaken looking interventions differ specific component. loccos() creates scatter plot x-axis represents z-score intervention includes component y-axis represents z-score intervention include component. point line y = x indicates inclusion/exclusion underlying component affect efficacy interventions. Dots y = x line beneficial outcome, indicate inclusion component hampers treatment effect dots line signify component increases efficacy. opposite holds harmful outcome.  can explore impact component , ","code":"loccos(net, combination = \"A\", histogram = FALSE)"},{"path":"https://georgiosseitidis.github.io/viscomp/articles/viscomp.html","id":"waterfall-plot-with-watercomp","dir":"Articles","previous_headings":"Single outcome","what":"Waterfall plot with watercomp()","title":"An introduction to network meta-analysis using the viscomp package","text":"watercomp() works similarly loccos() except instead visualizing impact component (combination) scatter plot, impact now visualizing waterfall plot. horizontal y = 0 line represents zero impact intervention efficacy extra component added. Bars indicate whether inclusion extra component impact intervention. interpretation direction underlying bars (positive negative) depends nature outcome used (beneficial harmful).  can explore impact component , ","code":"watercomp(net, combination = \"A\")"},{"path":[]},{"path":"https://georgiosseitidis.github.io/viscomp/articles/viscomp.html","id":"artificial-network-meta-analysis-model-1","dir":"Articles","previous_headings":"Multiple outcomes","what":"Artificial network meta-analysis model","title":"An introduction to network meta-analysis using the viscomp package","text":"","code":"t1 <- c(\"A\", \"B\", \"C\", \"A+B\", \"A+C\", \"B+C\", \"A\") t2 <- c(\"C\", \"A\", \"A+C\", \"B+C\", \"A\", \"B\", \"B+C\")  TE1 <- c(2.12, 3.24, 5.65, -0.60, 0.13, 0.66, 3.28) TE2 <- c(4.69, 2.67, 2.73, -3.41, 1.79, 2.93, 2.51)  seTE1 <- rep(0.1, 7) seTE2 <- rep(0.2, 7)  study <- paste0(\"study_\", 1:7)  data1 <- data.frame(\"TE\" = TE1,                      \"seTE\" = seTE1,                      \"treat1\" = t1,                      \"treat2\" = t2,                      \"studlab\" = study,                     stringsAsFactors = FALSE)  data2 <- data.frame(\"TE\" = TE2,                      \"seTE\" = seTE2,                      \"treat1\" = t1,                      \"treat2\" = t2,                      \"studlab\" = study,                     stringsAsFactors = FALSE)  net1 <- netmeta(TE = TE,                  seTE = seTE,                  studlab = studlab,                  treat1 = treat1,                 treat2 = treat2,                  data = data1,                  ref = \"A\")  net2 <- netmeta::netmeta(TE = TE,                           seTE = seTE,                           studlab = studlab,                           treat1 = treat1,                          treat2 = treat2,                           data = data2,                           ref = \"A\")"},{"path":"https://georgiosseitidis.github.io/viscomp/articles/viscomp.html","id":"visualize-the-components-ranking-for-multiple-outcomes-with-rankheatplot","dir":"Articles","previous_headings":"Multiple outcomes","what":"Visualize the components’ ranking for multiple outcomes with rankheatplot()","title":"An introduction to network meta-analysis using the viscomp package","text":"rankheatplot() creates rank heat plot ranking interventions can presented across multiple outcomes (Veroniki et al., 2016). Circles corresponds outcomes, rads components. Sectors coloured according ranking relevant components within underlying outcomes. Ranking calculated median (mean) intervention P-scores including component interest particular outcome. coloured scale ranges red (p-score = 0%) green (p-score = 100%). Uncolored sectors, , suggest underlying component included interventions NMA particular outcome.  can visualize p-scores two outcomes (assuming first outcome beneficial second harmful), ","code":"rankheatplot(list(net1, net2), small.values = c(\"good\", \"bad\"))"},{"path":"https://georgiosseitidis.github.io/viscomp/articles/viscomp.html","id":"references","dir":"Articles","previous_headings":"Multiple outcomes > Visualize the components’ ranking for multiple outcomes with rankheatplot()","what":"References","title":"An introduction to network meta-analysis using the viscomp package","text":"Veroniki, . ., Straus, S. E., Fyraridis, ., & Tricco, . C. (2016). rank-heat plot novel way present results network meta-analysis including multiple outcomes. Journal Clinical Epidemiology, 76, 193–199. https://doi.org/10.1016/j.jclinepi.2016.02.016","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Georgios Seitidis. Author, maintainer. Sofia Tsokani. Author. Christos Christogiannis. Author. Katerina Maria Kontouli. Author. Alexandros Fyraridis. Author. Stavros Nikolakopoulos. Author. Areti Angeliki Veroniki. Author. Dimitris Mavridis. Author.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Seitidis G, Tsokani S, Christogiannis C, Kontouli K, Fyraridis , Nikolakopoulos S, Veroniki , Mavridis D (2022). viscomp: Visualize Multicomponent Interventions Network Meta-Analysis. https://github.com/georgiosseitidis/viscomp, https://georgiosseitidis.github.io/viscomp/.","code":"@Manual{,   title = {viscomp: Visualize Multicomponent Interventions in Network Meta-Analysis},   author = {Georgios Seitidis and Sofia Tsokani and Christos Christogiannis and Katerina Maria Kontouli and Alexandros Fyraridis and Stavros Nikolakopoulos and Areti Angeliki Veroniki and Dimitris Mavridis},   year = {2022},   note = {https://github.com/georgiosseitidis/viscomp, https://georgiosseitidis.github.io/viscomp/}, }"},{"path":"https://georgiosseitidis.github.io/viscomp/index.html","id":"viscomp","dir":"","previous_headings":"","what":"Visualize Multicomponent Interventions in Network Meta-Analysis","title":"Visualize Multicomponent Interventions in Network Meta-Analysis","text":"goal viscomp provide several visualization tools exploring behavior components network meta-analysis complex interventions: heat plot two--two component combinations leaving one component combination scatter plot violin plot specific component combinations’ effects density plot components’ effects waterfall plot interventions’ effects differ certain component combination network graph components rank heat plot components multiple outcomes.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Visualize Multicomponent Interventions in Network Meta-Analysis","text":"can install development version viscomp like :","code":"install.packages(\"devtools\") devtools::install_github(\"georgiosseitidis/viscomp\")"},{"path":"https://georgiosseitidis.github.io/viscomp/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Visualize Multicomponent Interventions in Network Meta-Analysis","text":"Part 1: One single outcome Example network meta-analysis comparing efficacy multicomponent interventions major adverse cardiovascular events (MACE). network meta-analysis model uses odds ratios obtained arm level data. example fictional, learning purposes . can load viscomp library Load MACE dataset viscomp package conduct network meta-analysis. can visualize median z-values two--two component combinations heatcomp function follows:  can explore inclusion-exclusion specific component (e.g. component ) component combination, affects efficacy intervention loccos function follows:  can explore efficacy specific components combinations (e.g. , + B, B + C) specc function follows:  can explore number components affects efficacy intervention function specc follows:  can create density plots component combination interest (e.g combination + B) function denscomp follows:  can also explore inclusion-exclusion specific component (e.g. component ) component combination, affects efficacy intervention watercomp function follows:  can visualize 10 frequent components’ combinations found network compGraph function follows:  Part 2: Multiple outcomes Example two artificial network meta-analysis models Construct network meta-analysis models can visualize p-scores components outcomes function rankheatplot follows:","code":"library(viscomp) data(MACE, package = \"viscomp\")  library(netmeta)  data_NMA <- pairwise(studlab = Study,                        treat = list(treat1, treat2, treat3, treat4),                       n = list(n1, n2, n3, n4),                        event = list(event1, event2, event3, event4),                        data = MACE,                        sm = \"OR\" )  net <- netmeta(TE = TE,                 seTE = seTE,                 studlab = studlab,                 treat1 = treat1,                treat2 = treat2,                 data = data_NMA,                 ref = \"UC\") heatcomp(net) loccos(net, combination = \"A\", histogram = FALSE) specc(net, combination = c(\"A\", \"A + B\", \"B + C\")) specc(net, components_number = TRUE) denscomp(net, combination = \"A + B\", z_value = FALSE) watercomp(net, combination = \"A\") compGraph(net, mostF = 10, title = NULL) t1 <- c(\"A\", \"B\", \"C\", \"A+B\", \"A+C\", \"B+C\", \"A\") t2 <- c(\"C\", \"A\", \"A+C\", \"B+C\", \"A\", \"B\", \"B+C\")  TE1 <- c(2.12, 3.24, 5.65, -0.60, 0.13, 0.66, 3.28) TE2 <- c(4.69, 2.67, 2.73, -3.41, 1.79, 2.93, 2.51)  seTE1 <- rep(0.1, 7) seTE2 <- rep(0.2, 7)  study <- paste0(\"study_\", 1:7)  data1 <- data.frame(\"TE\" = TE1,                      \"seTE\" = seTE1,                      \"treat1\" = t1,                      \"treat2\" = t2,                      \"studlab\" = study,                     stringsAsFactors = FALSE)  data2 <- data.frame(\"TE\" = TE2,                      \"seTE\" = seTE2,                      \"treat1\" = t1,                      \"treat2\" = t2,                      \"studlab\" = study,                     stringsAsFactors = FALSE)  net1 <- netmeta(TE = TE,                  seTE = seTE,                  studlab = studlab,                  treat1 = treat1,                 treat2 = treat2,                  data = data1,                  ref = \"A\")  net2 <- netmeta::netmeta(TE = TE,                           seTE = seTE,                           studlab = studlab,                           treat1 = treat1,                          treat2 = treat2,                           data = data2,                           ref = \"A\") rankheatplot(list(net1, net2))"},{"path":"https://georgiosseitidis.github.io/viscomp/reference/MACE.html","id":null,"dir":"Reference","previous_headings":"","what":"Major Adverse Cardiovascular Event — MACE","title":"Major Adverse Cardiovascular Event — MACE","text":"artificial network meta-analysis compering effectiveness number interventions major adverse cardiovascular events.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/MACE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Major Adverse Cardiovascular Event — MACE","text":"","code":"MACE"},{"path":"https://georgiosseitidis.github.io/viscomp/reference/MACE.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Major Adverse Cardiovascular Event — MACE","text":"data.frame following columns Study study name trial treat1, treat2, treat3, treat4 Treatment names arms n1, n2, n3, n4 Total number participants arms event1, event2, event3, event4 Total number events arms","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/compGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Components Network Graph — compGraph","title":"Components Network Graph — compGraph","text":"Components Network Graph meant visualize frequency components’ combinations found network.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/compGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Components Network Graph — compGraph","text":"","code":"compGraph(   model,   sep = \"+\",   mostF = 5,   excl = NULL,   title = \"Most frequent combinations of components\",   print_legend = TRUE,   size_legend = 0.825 )"},{"path":"https://georgiosseitidis.github.io/viscomp/reference/compGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Components Network Graph — compGraph","text":"model object class netmeta. sep single character defines separator interventions components. mostF Number frequent combinations network. excl character vector specifies combinations excluded plot. title single character specifies overall title plot. print_legend logical. TRUE legend printed. size_legend size legend.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/compGraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Components Network Graph — compGraph","text":"Returns (invisibly) qgraph object.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/compGraph.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Components Network Graph — compGraph","text":"function resembles network plot nodes represent individual components found network edges represent combination components found least one treatment arm trials included network meta-analysis model. edge’s color represents one unique interventions (components’ combination) found network interventions. Edges’ thickness indicates frequency intervention (combination components) observed network (number arms combination assigned). number frequent combinations can modified argument mostF. function default plots five frequent components' combinations found network.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/compGraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Components Network Graph — compGraph","text":"","code":"data(MACE) NMAdata <- netmeta::pairwise(   studlab = Study, treat = list(treat1, treat2, treat3, treat4),   n = list(n1, n2, n3, n4), event = list(event1, event2, event3, event4), data = MACE, sm = \"OR\" ) net <- netmeta::netmeta(   TE = TE, seTE = seTE, studlab = studlab, treat1 = treat1,   treat2 = treat2, data = NMAdata, ref = \"A\" ) compGraph(model = net)"},{"path":"https://georgiosseitidis.github.io/viscomp/reference/denscomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Components Density Plot — denscomp","title":"Components Density Plot — denscomp","text":"function creates density plots order explore efficacy components.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/denscomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Components Density Plot — denscomp","text":"","code":"denscomp(   model,   sep = \"+\",   combination,   violin = FALSE,   random = TRUE,   z_value = TRUE )"},{"path":"https://georgiosseitidis.github.io/viscomp/reference/denscomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Components Density Plot — denscomp","text":"model object class netmeta. sep single character defines separator interventions components. combination character vector contains component combinations interest. violin logical. TRUE density visualized via violins instead density plots. random logical. TRUE random-effects NMA model used, instead fixed-effect NMA model. z_value logical. TRUE z-values used, instead intervention effects.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/denscomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Components Density Plot — denscomp","text":"object class ggplot.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/denscomp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Components Density Plot — denscomp","text":"length argument combination 1, function creates two density plots. first produced based interventions include component combination interest (specified argument combination), second interventions include underlying component combination. argument combination includes one elements, number densities equal length argument combination, density based interventions include relative component combination. example, combination = c(\"+ B\", \"B + C\", \"\") function produce 3 density plots based interventions includes components \"\" \"B\", interventions include components \"B\" \"C\" interventions includes component \"\", respectively. function default uses intervention's z-values z_value = TRUE obtained random-effects network meta-analysis (NMA) model (random = TRUE). also adjusted use intervention's effect estimates instead z-values, setting z_value = FALSE.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/denscomp.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Components Density Plot — denscomp","text":"efficacy components explored via violins plots instead density plots, setting violin = TRUE.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/denscomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Components Density Plot — denscomp","text":"","code":"data(MACE) NMAdata <- netmeta::pairwise(   studlab = Study, treat = list(treat1, treat2, treat3, treat4),   n = list(n1, n2, n3, n4), event = list(event1, event2, event3, event4), data = MACE, sm = \"OR\" ) net <- netmeta::netmeta(   TE = TE, seTE = seTE, studlab = studlab, treat1 = treat1,   treat2 = treat2, data = NMAdata, ref = \"UC\" ) denscomp(model = net, combination = \"C\") #> Warning: Node UC was excluded since the z-value could not be determined"},{"path":"https://georgiosseitidis.github.io/viscomp/reference/heatcomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Components Heat Plot — heatcomp","title":"Components Heat Plot — heatcomp","text":"function creates heat plot based two--two component combinations, obtained network meta-analysis (NMA) model.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/heatcomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Components Heat Plot — heatcomp","text":"","code":"heatcomp(   model,   sep = \"+\",   median = TRUE,   random = TRUE,   z_value = TRUE,   legend_name = NULL )"},{"path":"https://georgiosseitidis.github.io/viscomp/reference/heatcomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Components Heat Plot — heatcomp","text":"model object class netmeta. sep single character defines separator interventions components. median logical. TRUE median used instead mean summary measure. random logical. TRUE random-effects NMA model used instead fixed-effect NMA model. z_value logical. TRUE z-values used instead interventions effects. legend_name single character specifies title legend.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/heatcomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Components Heat Plot — heatcomp","text":"object class ggplot.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/heatcomp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Components Heat Plot — heatcomp","text":"Diagonal elements refer components, -diagonal components' combinations. element summarizes z-values (z_value = TRUE) interventions includes corresponding component combination. Combinations observed NMA model, denoted letter \"X\". summary measure, median used default (median = TRUE). magnitude z-score reflected color's intensity. Estimates close zero denoted white color, zero denoted warm colors (red) cold colors (blue) respectively. Intervention effects can used instead z-values setting z_value = FALSE. Also, setting median = FALSE, mean used instead median summary measure.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/heatcomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Components Heat Plot — heatcomp","text":"","code":"data(MACE) NMAdata <- netmeta::pairwise(   studlab = Study, treat = list(treat1, treat2, treat3, treat4),   n = list(n1, n2, n3, n4), event = list(event1, event2, event3, event4), data = MACE, sm = \"OR\" ) net <- netmeta::netmeta(   TE = TE, seTE = seTE, studlab = studlab, treat1 = treat1,   treat2 = treat2, data = NMAdata, ref = \"UC\" ) heatcomp(model = net)"},{"path":"https://georgiosseitidis.github.io/viscomp/reference/loccos.html","id":null,"dir":"Reference","previous_headings":"","what":"Leaving One Component Combination Out Scatter plot — loccos","title":"Leaving One Component Combination Out Scatter plot — loccos","text":"function based network meta-analysis (NMA) estimates explores set components positive negative impact outcome, creating scatter plot based set interventions differ specific set components.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/loccos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Leaving One Component Combination Out Scatter plot — loccos","text":"","code":"loccos(   model,   sep = \"+\",   combination = NULL,   random = TRUE,   z_value = TRUE,   histogram = TRUE,   histogram.color = \"blue\" )"},{"path":"https://georgiosseitidis.github.io/viscomp/reference/loccos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Leaving One Component Combination Out Scatter plot — loccos","text":"model object class netmeta. sep single character defines separator interventions components. combination single character specifies component combination interest. random logical. TRUE random-effects NMA model used instead fixed-effect NMA model. z_value logical. TRUE z-values used instead interventions effects. histogram logical. TRUE histograms added plot. histogram.color single character specifies color histogram. See ggMarginal details.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/loccos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Leaving One Component Combination Out Scatter plot — loccos","text":"object class ggplot.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/loccos.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Leaving One Component Combination Out Scatter plot — loccos","text":"Axis y represents intervention's effect component combination included intervention, axis x represents intervention's effect included. Line \\(y = x\\) splits plot two parts. beneficial outcome, dots line indicates inclusion component combination balk intervention's efficacy, dots line indicate inclusion component combination increases intervention's efficacy. opposite holds harmful outcomes. component combination interest specified argument combination. example, combination = \"\", function plots interventions differ component \"\". combination = NULL, interventions differ one component plotted. function default uses z-values estimates NMA model (z_value = TRUE). Histograms nodes include include component combination added scatter plot, setting argument histogram = TRUE.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/loccos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Leaving One Component Combination Out Scatter plot — loccos","text":"","code":"data(MACE) NMAdata <- netmeta::pairwise(   studlab = Study, treat = list(treat1, treat2, treat3, treat4),   n = list(n1, n2, n3, n4), event = list(event1, event2, event3, event4), data = MACE, sm = \"OR\" ) net <- netmeta::netmeta(   TE = TE, seTE = seTE, studlab = studlab, treat1 = treat1,   treat2 = treat2, data = NMAdata, ref = \"UC\" ) loccos(model = net, combination = c(\"B\"))"},{"path":"https://georgiosseitidis.github.io/viscomp/reference/rankheatplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Components Rank Heat Plot — rankheatplot","title":"Components Rank Heat Plot — rankheatplot","text":"Rank heat plot summarizes components' p-scores multiple outcomes.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/rankheatplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Components Rank Heat Plot — rankheatplot","text":"","code":"rankheatplot(   model,   sep = \"+\",   median = TRUE,   random = TRUE,   small.values = NULL,   outcomeNames = c(\"Outcome 1\", \"Outcome 2\"),   cex_components = NULL,   cex_values = NULL,   cex_outcomes = NULL )"},{"path":"https://georgiosseitidis.github.io/viscomp/reference/rankheatplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Components Rank Heat Plot — rankheatplot","text":"model list netmeta models. sep single character defines separator interventions components. median logical. TRUE median used summary measure instead mean. random logical. TRUE random-effects NMA model used instead fixed-effects NMA model. small.values character vector specifies whether small intervention effects indicate beneficial (small.values = \"good\") harmful (small.values = \"bad\") effect. small.values = NULL small values assumed good outcome. outcomeNames character vector specifies names outcomes. cex_components Font size components' names. cex_values Font size p-scores. cex_outcomes Font size outcomes' names.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/rankheatplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Components Rank Heat Plot — rankheatplot","text":"Returns (invisibly) rank heat plot.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/rankheatplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Components Rank Heat Plot — rankheatplot","text":"function creates rank heat plot, number circles depend number outcomes. circle divided total number components, sector colored according corresponding component p-score. Components' p-scores summarized using either median (median = TRUE) mean (median = FALSE) p-scores obtained interventions include corresponding component. sector's colors reflect magnitude components p-scores. Red color indicates low p-score (close zero), green color indicates values close 1. Intervention's p-scores obtained network meta-analysis (NMA) model. default random-effects NMA model used outcome (random = TRUE).","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/rankheatplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Components Rank Heat Plot — rankheatplot","text":"","code":"# Artificial data set  t1 <- c(\"A\", \"B\", \"C\", \"A+B\", \"A+C\", \"B+C\", \"A\") t2 <- c(\"C\", \"A\", \"A+C\", \"B+C\", \"A\", \"B\", \"B+C\")  TE1 <- c(2.12, 3.24, 5.65, -0.60, 0.13, 0.66, 3.28) TE2 <- c(4.69, 2.67, 2.73, -3.41, 1.79, 2.93, 2.51)  seTE1 <- rep(0.1, 7) seTE2 <- rep(0.2, 7)  study <- paste0(\"study_\", 1:7)  data1 <- data.frame(   \"TE\" = TE1, \"seTE\" = seTE1, \"treat1\" = t1, \"treat2\" = t2, \"studlab\" = study,   stringsAsFactors = FALSE )  data2 <- data.frame(   \"TE\" = TE2, \"seTE\" = seTE2, \"treat1\" = t1, \"treat2\" = t2, \"studlab\" = study,   stringsAsFactors = FALSE )  # Network meta-analysis models  net1 <- netmeta::netmeta(   TE = TE, seTE = seTE, studlab = studlab, treat1 = treat1,   treat2 = treat2, data = data1, ref = \"A\" )  net2 <- netmeta::netmeta(   TE = TE, seTE = seTE, studlab = studlab, treat1 = treat1,   treat2 = treat2, data = data2, ref = \"A\" )  # Rank heat plot  rankheatplot(model = list(net1, net2))"},{"path":"https://georgiosseitidis.github.io/viscomp/reference/specc.html","id":null,"dir":"Reference","previous_headings":"","what":"Specific Component Combination violin plots — specc","title":"Specific Component Combination violin plots — specc","text":"function based network meta-analysis (NMA) estimates produces violin plots interventions include component combinations interest.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/specc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specific Component Combination violin plots — specc","text":"","code":"specc(   model,   sep = \"+\",   combination = NULL,   components_number = FALSE,   groups = NULL,   random = TRUE,   z_value = TRUE,   fill_violin = \"lightblue\",   color_violin = \"lightblue\",   adj_violin = 1,   width_violin = 1,   boxplot = TRUE,   width_boxplot = 0.3,   errorbar_type = 5,   dots = TRUE,   jitter_shape = 16,   jitter_position = 0.01,   values = TRUE )"},{"path":"https://georgiosseitidis.github.io/viscomp/reference/specc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specific Component Combination violin plots — specc","text":"model object class netmeta. sep single character defines separator interventions components. combination character vector specifies component combinations interest. components_number logical. TRUE violins created based number components included interventions. groups character vector contains clusters number components. Elements vector must integer numbers (e.g. 5 \"5\"), range values (e.g. \"3-4\" ), \"xx+\" format (e.g \"5+\"). random logical. TRUE random-effects NMA model used instead fixed-effect NMA model. z_value logical. TRUE z-values used instead interventions effects. fill_violin fill color violin. See geom_violin details. color_violin color violin. See geom_violin details. adj_violin adjustment violin. See geom_violin details. width_violin width violin. See geom_violin details. boxplot logical. TRUE boxplots plotted. width_boxplot width boxplot. See geom_boxplot details. errorbar_type boxplot's line type. See stat_boxplot details. dots logical. TRUE data points plotted. jitter_shape jitter shape. See geom_jitter details. jitter_position jitter position. See geom_jitter details. values logical. TRUE median value violin printed.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/specc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specific Component Combination violin plots — specc","text":"object class ggplot.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/specc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specific Component Combination violin plots — specc","text":"default function creates violin component network (combination = NULL). violin visualizes distribution effect estimates, obtained interventions include corresponding component. Combinations interest specified argument combination. example, combination = c(\"\", \"+ B\"), two violin plots produced. first one based interventions contain component \"\", second one, based interventions contain components B. setting argument components_number = TRUE, behavior intervention's effect number components increased explored, producing violins based number components included interventions. number components included intervention ranges 1 3, 3 violins produced total. violins based interventions include one component, two components, three components respectively. number components also categorized groups argument groups. example components_number = TRUE groups = c(\"1-3\", 4, \"5+\"), 3 violins created. One interventions contain less 3 components, one interventions contain 4 components one contain 5 components. function default uses z-values, adjusted use intervention's effects setting z_value = FALSE.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/specc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specific Component Combination violin plots — specc","text":"","code":"data(MACE) NMAdata <- netmeta::pairwise(   studlab = Study, treat = list(treat1, treat2, treat3, treat4),   n = list(n1, n2, n3, n4), event = list(event1, event2, event3, event4), data = MACE, sm = \"OR\" ) net <- netmeta::netmeta(   TE = TE, seTE = seTE, studlab = studlab, treat1 = treat1,   treat2 = treat2, data = NMAdata, ref = \"UC\" ) specc(model = net, combination = c(\"B\", \"C\", \"B + C\"))"},{"path":"https://georgiosseitidis.github.io/viscomp/reference/watercomp.html","id":null,"dir":"Reference","previous_headings":"","what":"Waterfall plot — watercomp","title":"Waterfall plot — watercomp","text":"function produces waterfall plot based z-values interventions differ one specific component combination.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/watercomp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Waterfall plot — watercomp","text":"","code":"watercomp(model, sep = \"+\", combination = NULL, random = TRUE)"},{"path":"https://georgiosseitidis.github.io/viscomp/reference/watercomp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Waterfall plot — watercomp","text":"model object class netmeta. sep single character defines separator interventions components. combination single character specifies component combination interest. random logical. TRUE z-values obtained random-effects NMA model instead fixed-effect NMA model.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/watercomp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Waterfall plot — watercomp","text":"object class ggplot.","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/watercomp.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Waterfall plot — watercomp","text":"function based intervention's z-values obtained network meta-analysis (NMA) model visualizes observed interventions differ one specific component combination, order explore one extra component combination every comparison positive negative impact. Bars \\(y = 0\\) line, indicates inclusion extra specific component combination impact intervention. direction impact (positive negative), depends outcomes’ nature (beneficial harmful). combination interest defined argument combination. default function visualizes interventions differ one component (combination = NULL). example combination = \"+B\", function plots interventions differ \"+B\".","code":""},{"path":"https://georgiosseitidis.github.io/viscomp/reference/watercomp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Waterfall plot — watercomp","text":"","code":"data(MACE) NMAdata <- netmeta::pairwise(   studlab = Study, treat = list(treat1, treat2, treat3, treat4),   n = list(n1, n2, n3, n4), event = list(event1, event2, event3, event4), data = MACE, sm = \"OR\" ) net <- netmeta::netmeta(   TE = TE, seTE = seTE, studlab = studlab, treat1 = treat1,   treat2 = treat2, data = NMAdata, ref = \"UC\" ) watercomp(net)"},{"path":"https://georgiosseitidis.github.io/viscomp/news/index.html","id":"viscomp-010","dir":"Changelog","previous_headings":"","what":"viscomp 0.1.0","title":"viscomp 0.1.0","text":"Added NEWS.md file track changes package.","code":""}]
